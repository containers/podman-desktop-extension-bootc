#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: pr-check

on: [pull_request]

jobs:
  lint-format-unit:
    name: linter, formatter, and tests / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-14]
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Execute pnpm
        run: pnpm install

      - name: Run linter
        run: pnpm lint:check

        # skip formatter on windows
      - name: Run formatter
        if: ${{ matrix.os=='ubuntu-22.04' || matrix.os=='macos-14' }}
        run: pnpm format:check

      - name: Run tests
        run: pnpm test

      - name: Run typecheck
        run: pnpm typecheck

      - name: Run svelte check
        run: pnpm svelte:check

      - name: Run build
        run: pnpm build

  e2e-tests:
    name: e2e tests
    runs-on: ubuntu-24.04
    env:
      SKIP_INSTALLATION: true
    steps:
      - uses: actions/checkout@v4
        with:
          path: podman-desktop-extension-bootc
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Checkout podman desktop
      - uses: actions/checkout@v4
        with:
          repository: containers/podman-desktop
          ref: main
          path: podman-desktop

      - name: Update podman
        run: |
          # ubuntu version from kubic repository to install podman we need (v5)
          ubuntu_version='23.04'
          sudo sh -c "echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list"
          curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/Release.key" | sudo apt-key add -
          # install necessary dependencies for criu package which is not part of 23.04
          sudo apt-get install -qq libprotobuf32t64 python3-protobuf libnet1
          # install criu manually from static location
          curl -sLO http://cz.archive.ubuntu.com/ubuntu/pool/universe/c/criu/criu_3.16.1-2_amd64.deb && sudo dpkg -i criu_3.16.1-2_amd64.deb
          sudo apt-get update -qq
          sudo apt-get -qq -y install podman || { echo "Start fallback steps for podman nightly installation from a static mirror" && \
            sudo sh -c "echo 'deb http://ftp.lysator.liu.se/pub/opensuse/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list" && \
            curl -L "http://ftp.lysator.liu.se/pub/opensuse/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/Release.key" | sudo apt-key add - && \
            sudo apt-get update && \
            sudo apt-get -y install podman; }
          podman version

      - name: Revert unprivileged user namespace restrictions in Ubuntu 24.04
        run: |
          # allow unprivileged user namespace
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          package_json_file: ./podman-desktop/package.json

      - name: Execute pnpm
        working-directory: ./podman-desktop
        run: pnpm install

      - name: Build Podman Desktop for E2E tests
        working-directory: ./podman-desktop
        run: pnpm test:e2e:build

      - name: Ensure getting current HEAD version of the test framework
        working-directory: ./podman-desktop-extension-bootc/tests/playwright
        run: |
          # workaround for https://github.com/containers/podman-desktop-extension-bootc/issues/712
          version=$(npm view @podman-desktop/tests-playwright@next version)
          echo "Version of @podman-desktop/tests-playwright to be used: $version"
          jq --arg version "$version" '.devDependencies."@podman-desktop/tests-playwright" = $version' package.json > package.json_tmp && mv package.json_tmp package.json

      - name: Execute pnpm in Bootc Extension
        working-directory: ./podman-desktop-extension-bootc
        run: pnpm install --no-frozen-lockfile

      - name: Build bootc extension from container file
        working-directory: ./podman-desktop-extension-bootc
        run: |
          pnpm build
          podman build -t local_bootc_image ./
          CONTAINER_ID=$(podman create localhost/local_bootc_image --entrypoint "")
          podman export $CONTAINER_ID > /tmp/local_bootc_extension.tar
          mkdir -p tests/playwright/tests/output/bootc-tests-pd/plugins
          tar -xf /tmp/local_bootc_extension.tar -C tests/playwright/tests/output/bootc-tests-pd/plugins/

      - name: Run All E2E tests
        working-directory: ./podman-desktop-extension-bootc
        env:
          PODMAN_DESKTOP_ARGS: ${{ github.workspace }}/podman-desktop
        run: pnpm test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-tests
          path: ./**/tests/**/output/


